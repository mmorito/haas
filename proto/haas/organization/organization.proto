syntax = "proto3";

package mnes.haas.organization;

option go_package = "github.com/mnes/haas/api/pb/haas/v1;haas";

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

service OrganizationService {
  // 組織の作成
  rpc CreateOrganization(CreateOrganizationRequest) returns (Organization) {
    option (google.api.http) = {
      post: "/v1/organizations"
      body: "*"
    };
  }

  // 組織の更新
  rpc UpdateOrganization(UpdateOrganizationRequest) returns (Organization) {
    option (google.api.http) = {
      put: "/v1/organizations/{organization_id}"
      body: "*"
    };
  }

  // 組織の取得
  rpc GetOrganization(GetOrganizationRequest) returns (Organization) {
    option (google.api.http) = {
      get: "/v1/organizations/{organization_id}"
    };
  }

  // 組織の削除
  rpc DeleteOrganization(DeleteOrganizationRequest)
      returns (google.protobuf.Empty) {
    option (google.api.http) = {
      delete: "/v1/organizations/{organization_id}"
    };
  }
}

message CreateOrganizationRequest {
  string name   = 1;
  bool   active = 2;
}

message UpdateOrganizationRequest {
  string organization_id = 1;
  bool   active          = 2;
  string name            = 3;
}

message GetOrganizationRequest {
  string organization_id = 1;
}

message DeleteOrganizationRequest {
  string organization_id = 1;
}

message Organization {
  string organization_id = 1;
  bool   active          = 2;
  string name            = 3;
}